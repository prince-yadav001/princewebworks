// This is your Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String
  username      String    @unique
  email         String    @unique
  password      String
  otp           String?
  isVerified    Boolean   @default(false)
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt @default(now())
  lastLogin     DateTime?
  applications  JobApplication[]
  leads         Lead[]
}

model Job {
  id            String    @id @default(cuid())
  title         String
  department    String?
  description   String
  location      String?
  type          String?
  createdAt     DateTime  @default(now())
  applications  JobApplication[]
}

model JobApplication {
  id        String   @id @default(cuid())
  userId    String
  jobId     String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  job       Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
  status    String   @default("Pending")
  appliedAt DateTime @default(now())

  @@unique([userId, jobId])
}

enum LeadStatus {
  NEW
  CONTACTED
  QUALIFIED
  WON
  LOST
}

model Lead {
  id           String     @id @default(cuid())
  name         String
  email        String     @unique
  phone        String?
  status       LeadStatus @default(NEW)
  source       String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt @default(now())
  assignedToId String?
  assignedTo   User?      @relation(fields: [assignedToId], references: [id])
}
